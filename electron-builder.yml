
appId: "com.guardia.security"
productName: "Guardia Security"
copyright: "Copyright Â© 2023-2024 Guardia Security"

directories:
  output: "release/"
  buildResources: "public/"

files:
  - "dist/**/*"
  - "electron/**/*"
  - "backend/**/*"
  - "requirements.txt"
  - "run_backend.py"

extraResources:
  - from: "public"
    to: "public"

extraFiles:
  - "README.md"
  - "BUILD.md"
  - "start-guardia.bat"
  - "start-guardia.sh"
  - "INSTALL.md"

protocols:
  - name: "Guardia Security"
    schemes: ["guardia"]

mac:
  category: "public.app-category.utilities"
  icon: "public/icons/guardia-icon-512.png"
  target:
    - "dmg"
    - "zip"
  artifactName: "${productName}-${version}-${arch}.${ext}"
  darkModeSupport: true
  hardenedRuntime: true
  # Code signing for macOS - Uncomment when certificate is available
  # gatekeeperAssess: false
  # entitlements: "./build/entitlements.mac.plist"
  # entitlementsInherit: "./build/entitlements.mac.plist"
  # identity: null # Set to "Developer ID Application: Your Company Name (YOUR_TEAM_ID)"
  
win:
  icon: "public/icons/guardia-icon-512.png"
  target:
    - "nsis"
  artifactName: "${productName}-${version}-${arch}.${ext}"
  # Code signing for Windows - Uncomment when certificate is available
  # certificateFile: "./path/to/certificate.pfx"
  # certificatePassword: "${CERTIFICATE_PASSWORD}"
  # signAndEditExecutable: true
  # signingHashAlgorithms: ["sha256"]
  # signDlls: true

linux:
  icon: "public/icons/guardia-icon-512.png"
  target:
    - "AppImage"
    - "deb"
    - "snap"
  category: "Utility"
  artifactName: "${productName}-${version}-${arch}.${ext}"
  desktop:
    StartupWMClass: "guardia-security"
    MimeType: "x-scheme-handler/guardia"

nsis:
  oneClick: true
  perMachine: true
  createDesktopShortcut: true
  createStartMenuShortcut: true
  shortcutName: "Guardia Security"
  installerIcon: "public/icons/guardia-icon-512.png"
  uninstallerIcon: "public/icons/guardia-icon-512.png"
  installerHeader: "public/icons/guardia-icon-192.png"
  installerSidebar: "public/lovable-uploads/25e50669-a0e5-4f4f-9923-dff3568c13ab.png"
  uninstallerSidebar: "public/lovable-uploads/25e50669-a0e5-4f4f-9923-dff3568c13ab.png"
  allowToChangeInstallationDirectory: false
  runAfterFinish: true
  artifactName: "${productName}-Setup-${version}.${ext}"

dmg:
  icon: "public/icons/guardia-icon-512.png"
  iconSize: 100
  background: "public/lovable-uploads/25e50669-a0e5-4f4f-9923-dff3568c13ab.png"
  window:
    width: 540
    height: 380

publish:
  provider: "github"
  releaseType: "release"
  generateUpdatesFilesForAllChannels: true
  publishAutoUpdate: true # Add auto-update publishing

afterPack: "electron/afterPack.js"

# Uncomment this configuration when ready for code signing and notarization
# afterSign: "electron/notarize.js"

# Add these configuration options for auto-updates
updater:
  allowPrerelease: false
  channel: "latest"
  requestHeaders:
    "Cache-Control": "no-cache"
